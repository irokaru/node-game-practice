!function(e){function t(t){for(var r,a,o=t[0],u=t[1],l=t[2],d=0,f=[];d<o.length;d++)a=o[d],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&f.push(i[a][0]),i[a]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(e[r]=u[r]);for(c&&c(t);f.length;)f.shift()();return n.push.apply(n,l||[]),s()}function s(){for(var e,t=0;t<n.length;t++){for(var s=n[t],r=!0,o=1;o<s.length;o++){var u=s[o];0!==i[u]&&(r=!1)}r&&(n.splice(t--,1),e=a(a.s=s[0]))}return e}var r={},i={0:0},n=[];function a(t){if(r[t])return r[t].exports;var s=r[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=e,a.c=r,a.d=function(e,t,s){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(s,r,function(t){return e[t]}.bind(null,r));return s},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var o=window.webpackJsonp=window.webpackJsonp||[],u=o.push.bind(o);o.push=t,o=o.slice();for(var l=0;l<o.length;l++)t(o[l]);var c=u;n.push([3,1]),s()}([function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={WIDTH:640,HEIGHT:480}},,function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class r extends Phaser.GameObjects.Rectangle{constructor(e,t,s,r,i,n,a){return super(e,t,s,r,i,n,a),e.add.existing(this),this.xMin=this.width/2,this.xMax=e.game.canvas.width-this.width/2,this.yMin=this.height/2,this.yMax=e.game.canvas.height-this.height/2,this}moveRelative(e=0,t=0,s=!1){return this.x+=e,this.y+=t,s&&this.fitInCanvas(),this}fitInCanvas(){return this.x<this.xMin&&(this.x=this.xMin),this.x>this.xMax&&(this.x=this.xMax),this}}t.default=r},function(e,t,s){"use strict";var r=o(s(1)),i=o(s(0)),n=o(s(4)),a=o(s(13));function o(e){return e&&e.__esModule?e:{default:e}}const u={type:r.default.AUTO,parent:"game",width:i.default.WIDTH,height:i.default.HEIGHT,scene:[n.default,a.default],physics:{default:"arcade",arcade:{gravity:{y:0}}}},l=new r.default.Game(u);window.game=l,window.addEventListener("resize",()=>l.scale.refresh())},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=f(s(5)),i=f(s(6)),n=f(s(7)),a=f(s(8)),o=f(s(9)),u=f(s(10)),l=f(s(11)),c=f(s(0)),d=f(s(12));function f(e){return e&&e.__esModule?e:{default:e}}const h=new a.default;class y extends Phaser.Scene{constructor(){super({key:"Game",active:!1}),this.$={}}create(){this.$.blocks=this.add.group();const e=u.default.getReferenceXPos(c.default.WIDTH),t=u.default.getReferenceYPos(c.default.HEIGHT);for(let s=0;s<u.default.Y_NUM;s++)for(let r=0;r<u.default.X_NUM;r++){const i=r*(u.default.X_SIZE+1)+u.default.X_SIZE/2+e,a=s*(u.default.Y_SIZE+1)+u.default.Y_SIZE/2+t,o=new n.default(this,i,a,u.default.X_SIZE,u.default.Y_SIZE,u.default.COLOR);this.$.blocks.add(o)}const s=l.default.getReferenceXPos(c.default.WIDTH),a=l.default.getReferenceYPos(c.default.HEIGHT);this.$.bar=new i.default(this,s,a,l.default.X_SIZE,l.default.Y_SIZE,l.default.COLOR);const d=l.default.getReferenceXPos(c.default.WIDTH),f=l.default.getReferenceYPos(c.default.HEIGHT)-150;this.$.ball=new r.default(this,d,f,o.default.RADIUS,o.default.COLOR).setVector(3,3),h.setup(this)}update(){const e=this.$.bar,t=this.$.ball,s={top:e=>e.getTopCenter().y-t.radius-1,bottom:e=>e.getBottomCenter().y+t.radius+1,left:e=>e.getLeftCenter().x-t.radius-1,right:e=>e.getRightCenter().x+t.radius+1};h.isDown("left")&&e.moveRelative(-l.default.X_SPEED,0,!0),h.isDown("right")&&e.moveRelative(l.default.X_SPEED,0,!0),t.collisionWallX()&&t.setVector(-t.vector.x,t.vector.y),t.collisionWallY()&&t.setVector(t.vector.x,-t.vector.y);const r=d.default.rect2circle(e,t);d.default.isVertical(r)?(t.y=s[collision](e),t.setVector(t.vector.x,-t.vector.y)):d.default.isHorizon(r)?(t.x=s[collision](e),t.setVector(-t.vector.x,t.vector.y)):t.moveByVector();for(const e of this.$.blocks.getChildren()){const r=d.default.rect2circle(e,t);if(d.default.isVertical(r)?(t.y=s[r](e),t.setVector(t.vector.x,-t.vector.y)):d.default.isHorizon(r)&&(t.x=s[r](e),t.setVector(-t.vector.x,t.vector.y)),""!==r){e.destroy();break}}0===this.$.blocks.getChildren().length&&this.scene.start("GameOver")}}t.default=y},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class r extends Phaser.GameObjects.Arc{constructor(e,t,s,r,i,n){return super(e,t,s,r,0,360,!1,i,n),e.add.existing(this),this.setVector(0,0),this.xMin=this.radius,this.xMax=e.game.canvas.width-this.radius,this.yMin=this.radius,this.yMax=e.game.canvas.height-this.radius,this}setVector(e=0,t=0){return this.vector={x:e,y:t},this}moveByVector(){return this.moveRelative(this.vector.x,this.vector.y,!0)}moveRelative(e=0,t=0,s=!1){return this.x+=e,this.y+=t,s&&this.fitInCanvas(),this}collisionWallX(){const e=this.x+this.vector.x;return e<this.xMin||this.xMax<e}collisionWallY(){const e=this.y+this.vector.y;return e<this.yMin||this.yMax<e}fitInCanvas(){return this.x<this.xMin&&(this.x=this.xMin),this.x>this.xMax&&(this.x=this.xMax),this.y<this.yMin&&(this.y=this.yMin),this.y>this.yMax&&(this.y=this.yMax),this}}t.default=r},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=s(2),n=(r=i)&&r.__esModule?r:{default:r};class a extends n.default{}t.default=a},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=s(2),n=(r=i)&&r.__esModule?r:{default:r};class a extends n.default{}t.default=a},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{setup(e){return this.keys=e.input.keyboard.addKeys({left:"left",right:"right"}),this}isDown(e){return this.keys[e].isDown}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={RADIUS:10,COLOR:65280}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={X_NUM:10,Y_NUM:5,X_SIZE:50,Y_SIZE:20,COLOR:13421772,getReferenceXPos(e){return(e-this.X_NUM*(this.X_SIZE+1))/2},getReferenceYPos:e=>e/15}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={X_SIZE:100,Y_SIZE:15,X_SPEED:5,COLOR:16764108,getReferenceXPos:e=>e/2,getReferenceYPos:e=>13*e/15}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{static rect2rect(e,t){return e.x-t.x<e.width/2+t.width/2&&e.y-t.y<e.height/2+t.height/2}static rect2circle(e,t){let s=t.x,r=t.y,i="";t.x<e.getLeftCenter().x?(s=e.getLeftCenter().x,i="left"):t.x>e.getRightCenter().x&&(s=e.getRightCenter().x,i="right"),t.y<e.getTopCenter().y?(r=e.getTopCenter().y,i="top"):t.y>e.getBottomCenter().y&&(r=e.getBottomCenter().y,i="bottom");const n=t.x-s,a=t.y-r;return Math.sqrt(n*n+a*a)<t.radius?i:""}static isHorizon(e){return"right"===e||"left"===e}static isVertical(e){return"top"===e||"bottom"===e}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=s(0),n=(r=i)&&r.__esModule?r:{default:r};class a extends Phaser.Scene{constructor(){super({key:"GameOver",active:!1})}create(){this.add.text(n.default.WIDTH/2,n.default.HEIGHT/2,"GAME OVER",{fontSize:"48px"}).setOrigin(.5)}}t.default=a}]);